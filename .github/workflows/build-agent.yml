name: Build Agent

on:
  push:
    branches:
      - "**"

env:
  PACKAGE_NAME: axjGw
  CACHE_DIR: ~/cache

jobs:
  release:
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: linux
            sdk_url_path: https://downloads.openwrt.org/releases/23.05.5/targets/x86/64
            sdk_name: -sdk-23.05.5-x86-64_
          - arch: arm7
            sdk_url_path: https://downloads.openwrt.org/releases/23.05.5/targets/armsr/armv7
            sdk_name: -sdk-23.05.5-armsr-armv7_
          - arch: mips
            sdk_url_path: https://downloads.openwrt.org/releases/23.05.5/targets/ramips/mt7621
            sdk_name: -sdk-23.05.5-ramips-mt7621_

    env:
      SDK_URL_PATH: ${{ matrix.sdk_url_path }}
      SDK_NAME: ${{ matrix.sdk_name }}
      CCACHE_DIR: ~/.ccache
      CONFIG_CCACHE: y
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare Cache Key
        id: cache_key
        run: echo "timestamp=$(date +"%s")" >> $GITHUB_OUTPUT

      - name: Setup Cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.CACHE_DIR }}
            ${{ env.CCACHE_DIR }}
          key: openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-${{ steps.cache_key.outputs.timestamp }}
          restore-keys: |
            openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-
      - name: Install Dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ccache gettext libncurses5-dev xsltproc golang-go

      - name: Build Agent Binary
        run: |
          # 安装 Go 项目依赖
          cd src
          go mod download
          cd ..
          
          # 执行构建脚本
          sh agentBuild.sh ${{ matrix.arch }}
          
          # 创建必要的目录
          mkdir -p openwrt/files/usr/bin
          
          # 复制并重命名二进制文件
          ls -al src/bin/
          cp src/bin/* openwrt/files/usr/bin/axjGw-agent
          cp src/bin/* axjGw-agent-${{ matrix.arch }}

      - name: Create Directories
        run: |
          CACHE_DIR_SDK="$(eval echo "$CACHE_DIR/sdk")"
          CACHE_DIR_DL="$(eval echo "$CACHE_DIR/dl")"
          CACHE_DIR_FEEDS="$(eval echo "$CACHE_DIR/feeds")"
          echo "CACHE_DIR_SDK: $CACHE_DIR_SDK"
          echo "CACHE_DIR_DL: $CACHE_DIR_DL"
          echo "CACHE_DIR_FEEDS: $CACHE_DIR_FEEDS"
          test -d "$CACHE_DIR_SDK" || mkdir -p "$CACHE_DIR_SDK"
          test -d "$CACHE_DIR_DL" || mkdir -p "$CACHE_DIR_DL"
          test -d "$CACHE_DIR_FEEDS" || mkdir -p "$CACHE_DIR_FEEDS"
          echo "CACHE_DIR_SDK=$CACHE_DIR_SDK" >> $GITHUB_ENV
          echo "CACHE_DIR_DL=$CACHE_DIR_DL" >> $GITHUB_ENV
          echo "CACHE_DIR_FEEDS=$CACHE_DIR_FEEDS" >> $GITHUB_ENV
          echo "SDK_HOME=$(mktemp -d)" >> $GITHUB_ENV
      - name: Download and Unzip SDK
        run: |
          cd "$CACHE_DIR_SDK"
          if ! ( wget -q -O - "$SDK_URL_PATH/sha256sums" | grep -- "$SDK_NAME" > sha256sums.small 2>/dev/null ) ; then
            echo "::error::Can not find ${SDK_NAME} file in sha256sums."
            exit 1
          fi
          SDK_FILE="$(cat sha256sums.small | cut -d' ' -f2 | sed 's/*//g')"
          if ! sha256sum -c ./sha256sums.small >/dev/null 2>&1 ; then
            wget -q -O "$SDK_FILE" "$SDK_URL_PATH/$SDK_FILE"
            if ! sha256sum -c ./sha256sums.small >/dev/null 2>&1 ; then
              echo "::error::SDK can not be verified!"
              exit 1
            fi
          fi
          cd -
          file "$CACHE_DIR_SDK/$SDK_FILE"
          tar -xvf "$CACHE_DIR_SDK/$SDK_FILE" -C "$SDK_HOME" --strip=1
          cd "$SDK_HOME"
          test -d "dl" && rm -rf "dl" || true
          test -d "feeds" && rm -rf "feeds" || true
          ln -s "$CACHE_DIR_DL" "dl"
          ln -s "$CACHE_DIR_FEEDS" "feeds"
          cp feeds.conf.default feeds.conf
          sed -i 's#git.openwrt.org/openwrt/openwrt#github.com/openwrt/openwrt#' feeds.conf
          sed -i 's#git.openwrt.org/feed/packages#github.com/openwrt/packages#' feeds.conf
          sed -i 's#git.openwrt.org/project/luci#github.com/openwrt/luci#' feeds.conf
          sed -i 's#git.openwrt.org/feed/telephony#github.com/openwrt/telephony#' feeds.conf
          cd -
      - name: Update and Install Packages
        run: |
          cd "$SDK_HOME"
          ./scripts/feeds update -a
          ln -s "${{ github.workspace }}/openwrt" "package/axjGw-agent"
          ./scripts/feeds install -a
          cd -
      - name: Build Packages
        run: |
          cd "$SDK_HOME"
          make defconfig
          ls -la package/axjGw-agent
          make package/axjGw-agent/{clean,compile} V=s
          find "$SDK_HOME/bin/" -type f -name "*.ipk" -exec ls -lh {} \;
          cd -
      - name: Copy and Rename Bin Files
        run: |
          ls -al "$SDK_HOME/bin/"
          find "$SDK_HOME/bin/" -type f -name "axjGw-agent*.ipk" -exec cp {} "${{ github.workspace }}" \;
          # Rename the ipk file with arch name
          find "${{ github.workspace }}" -type f -name "*.ipk" -exec mv {} "${{ github.workspace }}/axjGw-agent-openwrt-${{ matrix.arch }}.ipk" \;

      - name: Get Git Hash
        id: git_hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Upload Agent Binary Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: axjGw-agent-bin-${{ matrix.arch }}
          path: ${{ github.workspace }}/axjGw-agent-${{ matrix.arch }}
          retention-days: 1

      - name: Upload IPK Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: axjGw-agent-ipk-${{ matrix.arch }}
          path: ${{ github.workspace }}/axjGw-agent-openwrt-${{ matrix.arch }}.ipk
          retention-days: 1
